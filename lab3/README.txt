Iselda Aiello

I approached this problem mainly by following the code from RotatingCube and TransformingSquare. I created a Square Pyramid as the polyhedron to be transformed. I began by drawing out the shape, and then creating the points based off of their orientation from the drawing.
For each transformation, I had a function dedicated to reading keypresses and performing their corresponding function. For the keys xyz, they rotate the pyramid in the X, Y, and Z direction. The keys wasd move the polyhedron along the XY plane. They keys Mm and Nn scale the pyramid up/down in the X and Y directions. Each function is implemented in a way similar to lab2, but with a 4x4 matrix rather than a 3x3 matrix.
I chose to compose my functions as Translation( Scaling( Rotation(Position) ) ). This makes it so the translation and scaling operations act with respect to the canvas, rather than the orientation of the shape. I felt this made the most sense, as moving the shape around would move it across the canvas, rather than on its original axis (this would seem more like the canvas was rotating, rather than the shape itself). I also thought scaling with respect to its orientation on the screen would make more sense, as switching scaling and rotation would scale the object along its X and Y axes rather than the screen's X and Y axes. 
